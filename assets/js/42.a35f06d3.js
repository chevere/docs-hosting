(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{358:function(t,a,s){"use strict";s.r(a);var e=s(25),r=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"regex"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#regex"}},[t._v("#")]),t._v(" Regex")]),t._v(" "),a("h2",{attrs:{id:"summary"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#summary"}},[t._v("#")]),t._v(" Summary")]),t._v(" "),a("p",[t._v("Regex enables to work with a validated "),a("a",{attrs:{href:"https://en.wikipedia.org/wiki/Regular_expression",target:"_blank",rel:"noopener noreferrer"}},[t._v("regular expression"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("h2",{attrs:{id:"installing"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#installing"}},[t._v("#")]),t._v(" Installing")]),t._v(" "),a("p",[t._v("Regex is available through "),a("a",{attrs:{href:"https://packagist.org/packages/chevere/regex",target:"_blank",rel:"noopener noreferrer"}},[t._v("Packagist"),a("OutboundLink")],1),t._v(" and the repository source is at "),a("a",{attrs:{href:"https://github.com/chevere/regex",target:"_blank",rel:"noopener noreferrer"}},[t._v("chevere/regex"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("composer")]),t._v(" require chevere/regex\n")])])]),a("h2",{attrs:{id:"creating-regex"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#creating-regex"}},[t._v("#")]),t._v(" Creating Regex")]),t._v(" "),a("p",[t._v("Create a Regex by passing the regular expression pattern.")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("use")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token package"}},[t._v("Chevere"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Regex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("Regex")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$regex")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Regex")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'/^Hello World!$/'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"reading-pattern"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reading-pattern"}},[t._v("#")]),t._v(" Reading pattern")]),t._v(" "),a("h3",{attrs:{id:"as-is"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#as-is"}},[t._v("#")]),t._v(" As-is")]),t._v(" "),a("p",[t._v("The "),a("code",[t._v("__toString")]),t._v(" method is used to access the pattern passed on instance creation.")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$string")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$regex")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("__toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// /^Hello World!$/")]),t._v("\n")])])]),a("h3",{attrs:{id:"without-delimiters"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#without-delimiters"}},[t._v("#")]),t._v(" Without delimiters")]),t._v(" "),a("p",[t._v("The "),a("code",[t._v("noDelimiters")]),t._v(" method is used to access to the regex pattern without delimiters.")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$string")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$regex")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("noDelimiters")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ^Hello World!$")]),t._v("\n")])])]),a("h3",{attrs:{id:"without-delimiters-and-anchors"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#without-delimiters-and-anchors"}},[t._v("#")]),t._v(" Without delimiters and anchors")]),t._v(" "),a("p",[t._v("The "),a("code",[t._v("noDelimitersNoAnchors")]),t._v(" method is used to access to the regex pattern without delimiters and anchors.")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$string")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$regex")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("noDelimitersNoAnchors")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Hello World!")]),t._v("\n")])])]),a("h2",{attrs:{id:"match"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#match"}},[t._v("#")]),t._v(" Match")]),t._v(" "),a("p",[t._v("The "),a("code",[t._v("match")]),t._v(" method provides "),a("a",{attrs:{href:"https://www.php.net/preg-match",target:"_blank",rel:"noopener noreferrer"}},[t._v("preg_match"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$array")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$regex")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'Hello World!'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [Hello World!]")]),t._v("\n")])])]),a("h2",{attrs:{id:"match-all"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#match-all"}},[t._v("#")]),t._v(" Match All")]),t._v(" "),a("p",[t._v("The "),a("code",[t._v("matchAll")]),t._v(" method provides "),a("a",{attrs:{href:"https://www.php.net/preg-match-all",target:"_blank",rel:"noopener noreferrer"}},[t._v("preg_match_all"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$regex")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("matchAll")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [Hello World!]")]),t._v("\n")])])]),a("h2",{attrs:{id:"assert-match"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#assert-match"}},[t._v("#")]),t._v(" Assert Match")]),t._v(" "),a("p",[t._v("The "),a("code",[t._v("assertMatch")]),t._v(" method asserts that the string matches. It throws "),a("code",[t._v("Exceptions\\NoMatchException")]),t._v(" when failing to assert.")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$regex")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("assertMatch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'Hello World!'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"assert-match-all"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#assert-match-all"}},[t._v("#")]),t._v(" Assert Match All")]),t._v(" "),a("p",[t._v("The "),a("code",[t._v("assertMatchAll")]),t._v(" method asserts that the string matches all. It throws "),a("code",[t._v("Exceptions\\NoMatchException")]),t._v(" when failing to assert.")]),t._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$regex")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("assertMatchAll")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'Hello World!'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);